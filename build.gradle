apply plugin: 'java'
apply plugin: 'maven'

group = 'org.renjin.cran'
version = '0.0.1'

description = """"""

sourceCompatibility = 1.5
targetCompatibility = 1.5

def rpkg = "rpkg"
def ren = "ren"
def renpkg = "ren/rpkg"

repositories
{
     maven { url "http://nexus.bedatadriven.com/content/groups/public/" }
     maven { url "http://repo.maven.apache.org/maven2" }
}


dependencies {

}

task cleanall << {
    
    println("rm $ren/NAMESPACE".execute().text)
    println("rm -rf ${renpkg}".execute().text)
    println("rm $ren/pom.xml".execute().text)
}

task ship << {

    println ("Rscript manage_lib.R $ren install".execute().text)
    println ("mvn -f $ren/pom.xml clean package install".execute().text)
    println ("\n===== INCLUDE WITH =====\n")
    println ("compile('${project.group}:${project.name}:${project.version}')\n")
}

task newrpkg << {

    new File("$renpkg").mkdirs()
    println ("Rscript manage_lib.R $ren setup ${project.name} ${project.version}".execute().text)
    println ("ln -s $rpkg/NAMESPACE $ren/NAMESPACE".execute().text)
}

task genpom << {

    def doPom = { strChanges ->
        def basePom = "base_pom.xml"
        def updatedContent = new File(basePom).getText('UTF-8')
        strChanges.each
        {
            updatedContent = updatedContent.replaceAll(it[0], it[1])
        }
        new File("$ren/pom.xml").write(updatedContent, 'UTF-8')
    }

    doPom([
        ["PACKAGE_NAME", project.name],
        ["PACKAGE_VERSION", project.version]
    ])
}
